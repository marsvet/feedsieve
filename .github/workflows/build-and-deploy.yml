name: Build and Push Docker Image

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  # Container registry configuration - set these in repository secrets
  REGISTRY: ${{ secrets.REGISTRY }}
  REGISTRY_NAMESPACE: ${{ secrets.REGISTRY_NAMESPACE }}
  IMAGE_NAME: feedsieve

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Generate image tags
        id: tags
        run: |
          # Generate timestamp in MMDDHHMM format (Beijing time UTC+8)
          TIMESTAMP=$(TZ='Asia/Shanghai' date '+%m%d%H%M')
          # Get short commit ID
          COMMIT_ID=${GITHUB_SHA:0:7}
          # Generate tag
          TAG="${TIMESTAMP}-${COMMIT_ID}"

          echo "timestamp=${TIMESTAMP}" >> $GITHUB_OUTPUT
          echo "commit_id=${COMMIT_ID}" >> $GITHUB_OUTPUT
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "full_image=${REGISTRY}/${REGISTRY_NAMESPACE}/${IMAGE_NAME}:${TAG}" >> $GITHUB_OUTPUT

          echo "Generated tag: ${TAG}"
          echo "Full image: ${REGISTRY}/${REGISTRY_NAMESPACE}/${IMAGE_NAME}:${TAG}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REGISTRY_NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ steps.tags.outputs.tag }}
            ${{ env.REGISTRY }}/${{ env.REGISTRY_NAMESPACE }}/${{ env.IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.description=FeedSieve - Intelligent RSS content filtering system
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.tags.outputs.timestamp }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDTIME=${{ steps.tags.outputs.timestamp }}
            VERSION=${{ steps.tags.outputs.tag }}
            REVISION=${{ steps.tags.outputs.commit_id }}

      - name: Output image information
        run: |
          echo "🐳 Docker image built and pushed successfully!"
          echo "📦 Image: ${{ steps.tags.outputs.full_image }}"
          echo "🏷️  Tag: ${{ steps.tags.outputs.tag }}"
          echo "📅 Timestamp: ${{ steps.tags.outputs.timestamp }}"
          echo "🔖 Commit: ${{ steps.tags.outputs.commit_id }}"

          # Create deployment info for other workflows to use
          echo "IMAGE_TAG=${{ steps.tags.outputs.tag }}" >> $GITHUB_ENV
          echo "FULL_IMAGE=${{ steps.tags.outputs.full_image }}" >> $GITHUB_ENV
